workflows:
  # ------------------------------
  # ANDROID: Yalnızca AAB üretir.
  # ------------------------------
  android_release:
    name: Android Release (AAB)
    max_build_duration: 60
    instance_type: mac_mini_m2
    environment:
      flutter: stable
      vars:
        ANDROID_API_LEVEL: "34"          # Gerekirse 35 yap
        ANDROID_BUILD_TOOLS: "34.0.0"    # Gerekirse 35.0.0
    cache:
      cache_paths:
        - ~/.pub-cache
        - ~/.gradle/caches
        - ~/.gradle/wrapper
        - /usr/local/share/android-sdk
    scripts:
      - name: Accept Android SDK licenses
        script: |
          yes | sdkmanager --licenses

      - name: Pre-install Android SDK components (with retries)
        script: |
          set -e
          TO_INSTALL=("platform-tools" "platforms;android-${ANDROID_API_LEVEL}" "build-tools;${ANDROID_BUILD_TOOLS}")
          for i in {1..3}; do
            echo "Attempt $i to install SDK components..."
            sdkmanager "${TO_INSTALL[@]}" && break || sleep 15
            if [ "$i" -eq 3 ]; then
              echo "Retrying once with --no_https ..."
              sdkmanager --no_https "${TO_INSTALL[@]}"
            fi
          done

      - name: Increase Gradle HTTP timeouts (optional)
        script: |
          echo "org.gradle.internal.http.socketTimeout=120000" >> android/gradle.properties
          echo "org.gradle.internal.http.connectionTimeout=120000" >> android/gradle.properties

      - name: Ensure no explicit buildToolsVersion in app/build.gradle
        script: |
          # buildToolsVersion satırı varsa kaldır; AGP otomatik seçecek
          sed -i '' -E '/buildToolsVersion/d' android/app/build.gradle || true

      - name: Flutter clean & pub get
        script: |
          flutter --version
          flutter clean
          flutter pub get

      - name: Build Android AAB
        script: |
          flutter build appbundle --release

    artifacts:
      - build/app/outputs/bundle/release/*.aab
      - build/**/outputs/**/*.mapping.txt

  # ------------------------------
  # iOS: TestFlight (Internal Testing grubuna gönderir)
  # ------------------------------
  ios_release:
    name: iOS Release (TestFlight)
    max_build_duration: 60
    instance_type: mac_mini_m2
    environment:
      groups:
        - Ali                      # ← Environment variables sayfasındaki grup adın
      flutter: stable
      xcode: latest
      cocoapods: default
      vars:
        APP_ID: "com.tasdemir.habitfree"

    # Tag atınca otomatik tetiklensin (örn. v1.0.2, v1.0.3 ...)
    triggering:
      events:
        - tag
      tag_patterns:
        - pattern: "*"
          include: true

    scripts:
      - name: Flutter clean & pub get
        script: |
          flutter --version
          flutter clean
          flutter pub get

      - name: Set iOS deployment target (SAFE)
        script: |
          PBX="ios/Runner.xcodeproj/project.pbxproj"
          if [[ -f "$PBX" ]]; then
            /usr/bin/sed -i '' 's/IPHONEOS_DEPLOYMENT_TARGET = 1[23]\.0;/IPHONEOS_DEPLOYMENT_TARGET = 14.0;/g' "$PBX" || true
          fi

      - name: Set up iOS code signing (Automatic)
        script: |
          echo "Using automatic code signing from Codemagic UI"

      - name: CocoaPods install
        script: |
          cd ios
          pod install --repo-update

      - name: Set iOS Bundle Identifier
        script: |
          echo "Setting Bundle ID to $APP_ID"
          sed -i '' "s/com\.example\.bagimliss/$APP_ID/g" ios/Runner.xcodeproj/project.pbxproj

      - name: Ensure Widget Extension is included
        script: |
          echo "Checking if SavingsWidget extension exists..."
          if [[ -d "ios/SavingsWidget" ]]; then
            echo "✅ Widget extension found"
            ls -la ios/SavingsWidget/
          else
            echo "❌ Widget extension not found"
            exit 1
          fi

      - name: Build iOS (IPA) using pubspec version
        script: |
          VERSION_INFO=$(grep '^version:' pubspec.yaml | cut -d' ' -f2)
          BUILD_NAME=$(echo $VERSION_INFO | cut -d'+' -f1)
          BUILD_NUMBER=$(echo $VERSION_INFO | cut -d'+' -f2)
          echo "Using BUILD_NAME=$BUILD_NAME BUILD_NUMBER=$BUILD_NUMBER"
          flutter build ipa --release \
            --build-name="$BUILD_NAME" \
            --build-number="$BUILD_NUMBER"

    artifacts:
      - build/ios/ipa/*.ipa
      - build/ios/archive/*.xcarchive
      - build/ios/**/*.dSYM.zip

    publishing:
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_ID
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: true
